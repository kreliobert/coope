const GFSConnection = $.hubConnection("https://www.coopenaevirtual.fi.cr/PS.GFS.Web/SignalR");

const GFSConnectionHub = GFSConnection.createHubProxy('DigitalSignHub');

const statesGFSConnection = { connecting: 0, connected: 1, reconnecting: 2, disconnected: 4 };

let stateGFSConnection = 0;

let gfsCallbackResponse = null;

let gfsTimeoutId = null;


GFSConnectionHub.on('notifyChangeGroup', function () {
    if ($('#GFSModal').is(':visible')) {
        $('#GFSModal').modal('toggle');
    }
});

GFSConnectionHub.on('riseWaitingModal', function (seconds, html) {
    secondsToHide = seconds * 1000;
    //Clean
    $("#GFSmodalContent").empty();
    //Set HTML
    $("#GFSmodalContent").append(html);
    //Show
    if (!$('#GFSModal').is(':visible')) {
        $('#GFSModal').modal('toggle');
    }

    GFSTimerToHideModal(seconds, false);
});

GFSConnectionHub.on('successResponse', function (transactionId) {
    GFSTimerToHideModal(null, true);

    if ($('#GFSModal').is(':visible')) {
        $('#GFSModal').modal('toggle');
    }

    $("#GFSmodalContent").empty();

    if ($.isFunction(gfsCallbackResponse)) {
        gfsCallbackResponse(true, transactionId);
    }

    if (UserConnected) {
        GFSConnectionHub.invoke('disconnect', UserConnected);
        UserConnected = null;
    }
});

GFSConnectionHub.on('failureResponse', function (transactionId) {
    GFSTimerToHideModal(null, true);

    if ($('#GFSModal').is(':visible')) {
        $('#GFSModal').modal('toggle');
    }

    $("#GFSmodalContent").empty();

    if ($.isFunction(gfsCallbackResponse)) {
        gfsCallbackResponse(false, transactionId);
    }

    if (UserConnected) {
        GFSConnectionHub.invoke('disconnect', UserConnected);
        UserConnected = null;
    }
});

function GFSConnectionStateChanged(state) {
    stateGFSConnection = state.newState;
}

GFSConnection.stateChanged(GFSConnectionStateChanged);

GFSConnection.start().done(function () {

});

function GFSTimerToHideModal(seconds, exit) {
    if (!exit) {
        gfsTimeoutId = setTimeout(function (seconds) {
            if ($('#GFSModal').is(':visible')) {
                $('#GFSModal').modal('hide');
            }
        }, secondsToHide);
    }
    else if (exit) {
        clearTimeout(gfsTimeoutId);
    }
}

function GFSprepareModal() {
    $('body').append(

        ' <!-- Modal --> ' +
        ' <div class="modal fade" id="GFSModal" role= "dialog" data-keyboard="false" data-backdrop="static"> ' +
        ' <div class="modal-dialog" style="white-space: normal;"> ' +
        '   <!-- Modal content--> ' +
        ' <div class="modal-content"> ' +
        '              <div class="modal-header"> ' +
        '                <h4 class="modal-title">Esperando Firma Digital</h4> ' +
        '           </div> ' +
        '          <div class="modal-body"> ' +
        '             <div id="GFSmodalContent" class="col-md-12"> ' +
        '             </div > ' +
        '        </div> ' +
        '       <div class="modal-footer"> ' +
        '     </div> ' +
        ' </div> ' +
        ' </div> ' +
        ' </div>'
    );
}

//GFS Library
function StartSignatureEngine(callBackResponse, userId) {
    gfsTimeoutId = null;

    //Initialize Hub
    if (userId) {
        if (stateGFSConnection !== statesGFSConnection.connected) {
            setTimeout(function () {
                StartSignatureEngine(callBackResponse, userId);
            }, 250);
            return;
        }

        UserConnected = null;
        GFSConnectionHub.invoke('connect', userId).done(function () { })
            .fail(function (error) {
                alert(error.message);
            });
    }
    GFSprepareModal();

    gfsCallbackResponse = callBackResponse;
}

function ConnectSignatureEngine(userId, invoke) {
    if (userId) {
        UserConnected = userId;

        if (stateGFSConnection !== statesGFSConnection.connected) {
            setTimeout(function ()
            {
                ConnectSignatureEngine(userId, invoke);
            }, 250);
            return;
        }

        GFSConnectionHub.invoke('connect', userId).done(function () {
            if ($.isFunction(invoke)) {
                invoke();
            }
        }).fail(function (error) {
            alert(error.message);
        });
    }
}

function GFSCopyToClipboard(element) {
    var $temp = $("<input>");
    $("body").append($temp);
    $temp.val($(element).text()).select();
    document.execCommand("copy");
    $temp.remove();
}
